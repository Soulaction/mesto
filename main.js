(()=>{"use strict";var t={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__btn-submit",inactiveButtonClass:"popup__btn-submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},e={name:document.querySelector(".profile__nike-name"),about:document.querySelector(".profile__discription"),avatar:document.querySelector(".profile__avatar")},n=document.querySelector(".profile__edit-btn"),r=document.querySelector(".profile__add-btn"),o=document.querySelector(".profile__avatar-edit-btn"),i=document.querySelector(".popup_type_profile-edit"),u=i.querySelector(".popup__form_type_profile-edit"),a=document.querySelector(".popup_type_update-avatar"),c=a.querySelector(".popup__form_type_update-avatar"),l=document.querySelector(".popup_type_card-create"),s=l.querySelector(".popup__form_type_card-edit"),f=document.querySelector(".popup_type_view-card"),p=document.querySelector(".popup_type_confirm");function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}p.querySelector(".popup__form_type_confirm");var d=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"addItem",value:function(t){this._container.prepend(this._renderer(t))}},{key:"renderItems",value:function(){var t=this;this.clear(),this._items.reverse().forEach((function(e){t.addItem(e)}))}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}var b=function(){function t(e,n,r,o,i,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._id=e._id,this._name=e.name,this._link=e.link,this._likes=e.likes,this._userId=r.id,this._templateSelector=n,this._handleOpenViewCard=o,this._handleConfirmDialog=i,this._handleLike=u,this._isMyCard=e.owner._id===r.id}var e,n;return e=t,(n=[{key:"_getTamlateCard",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){return this._card=this._getTamlateCard(),this._imgCard=this._card.querySelector(".element__img"),this._likeCard=this._card.querySelector(".element__like"),this.isLike()&&this._likeCard.classList.add("element__like_active"),this._buttonDeleteCard=this._card.querySelector(".element__bucket"),this._isMyCard||(this._buttonDeleteCard.style.display="none"),this._nameCard=this._card.querySelector(".element__name-picture"),this._countLikesElement=this._card.querySelector(".element__like-count"),this._imgCard.src=this._link,this._imgCard.alt="Картинка "+this._name,this._nameCard.textContent=this._name,this._countLikesElement.textContent=this._likes.length,this._setEventListeners(),this._card}},{key:"isLike",value:function(){var t=this;return!!this._likes.find((function(e){return e._id===t._userId}))}},{key:"_setEventListeners",value:function(){var t=this;this._likeCard.addEventListener("click",(function(){t._handleSetLikeOnCard()})),this._imgCard.addEventListener("click",(function(){t._handleOpenViewCard()})),this._isMyCard&&this._buttonDeleteCard.addEventListener("click",(function(){t._handleConfirmDialog(t._id,(function(){return t._handleDeleteCard()}))}))}},{key:"_handleSetLikeOnCard",value:function(){var t=this;this._handleLike(this._id).then((function(e){t._countLikesElement.textContent=e.likes.length,t._likes=e.likes,t._likeCard.classList.toggle("element__like_active")})).catch((function(t){return console.log(t)}))}},{key:"_handleDeleteCard",value:function(){this._card.remove()}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var g=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._validationConfig=e,this._form=n,this._fieldFormList=Array.from(this._form.querySelectorAll(this._validationConfig.inputSelector)),this._buttonForm=this._form.querySelector(this._validationConfig.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.add(this._validationConfig.inputErrorClass),e.classList.add(this._validationConfig.errorClass),e.textContent=t.validationMessage}},{key:"_hideInputError",value:function(t){var e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._validationConfig.inputErrorClass),e.classList.remove(this._validationConfig.errorClass),e.textContent=""}},{key:"_checkValidateInputForm",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_checkValidateForm",value:function(){return this._fieldFormList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._checkValidateForm()?(this._buttonForm.classList.add(this._validationConfig.inactiveButtonClass),this._buttonForm.setAttribute("disabled",!0)):(this._buttonForm.classList.remove(this._validationConfig.inactiveButtonClass),this._buttonForm.removeAttribute("disabled"))}},{key:"rebootForm",value:function(){var t=this;this._fieldFormList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}},{key:"_setEventValidateListener",value:function(){var t=this;this._fieldFormList.forEach((function(e){e.addEventListener("input",(function(){t._checkValidateInputForm(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventValidateListener()}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var C=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=e,this._closeButtons=this._popupElement.querySelector(".popup__btn-close")}var e,n;return e=t,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose.bind(this),{once:!0}),this._popupElement.classList.add("popup_opened")}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_handleClickAreaClose",value:function(t){this._popupElement===t.target&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._closeButtons.addEventListener("click",(function(){return t.close()})),this._popupElement.addEventListener("mousedown",(function(e){return t._handleClickAreaClose(e)}))}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==E(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===E(o)?o:String(o)),r)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=L(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},j.apply(this,arguments)}function P(t,e){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},P(t,e)}function L(t){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},L(t)}var I=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&P(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=L(r);if(o){var n=L(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupCardImg=e._popupElement.querySelector(".popup__img-card"),e._popupCardName=e._popupElement.querySelector(".popup__name-card"),e}return e=u,(n=[{key:"open",value:function(t){j(L(u.prototype),"open",this).call(this),this._popupCardName.textContent=t.name,this._popupCardImg.alt=t.name,this._popupCardImg.src=t.link}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(C);function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=x(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},F.apply(this,arguments)}function R(t,e){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},R(t,e)}function x(t){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},x(t)}var U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&R(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=x(r);if(o){var n=x(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===T(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._listInputForm=Array.from(n._popupElement.querySelectorAll(".popup__input")),n._submitFormHandler=e,n}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._valuesInputForm={},this._listInputForm.forEach((function(e){var n=e.name,r=e.value;t._valuesInputForm[n]=r})),this._valuesInputForm}},{key:"setInputValues",value:function(t){this._listInputForm.forEach((function(e){e.name in t&&(e.value=t[e.name])}))}},{key:"setEventListeners",value:function(){var t=this;F(x(u.prototype),"setEventListeners",this).call(this),this._form=this._popupElement.querySelector(".popup__form"),this.btnSubmit=this._popupElement.querySelector(".popup__btn-submit"),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitFormHandler(t._getInputValues()),t.btnSubmit.textContent="Сохранение..."}))}},{key:"close",value:function(){this._form.reset(),F(x(u.prototype),"close",this).call(this)}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(C);function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==A(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=z(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},V.apply(this,arguments)}function B(t,e){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},B(t,e)}function z(t){return z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},z(t)}var N=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&B(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=z(r);if(o){var n=z(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===A(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleConfirm=e,n}return e=u,(n=[{key:"open",value:function(t,e){this._id=t,this._extendForHandleConfirm=e||function(){},V(z(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var t=this;V(z(u.prototype),"setEventListeners",this).call(this),this._form=this._popupElement.querySelector(".popup__form"),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleConfirm(t._id).then((function(e){console.log(e),t._extendForHandleConfirm()})).catch((function(t){return console.log(t)})),t.close()}))}}])&&D(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(C);function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function M(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==H(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}var J=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._about=e.about,this._avatar=e.avatar}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t={};return t.id=this._id,t.name=this._name.textContent,t.about=this._about.textContent,t.avatar=this._avatar.src,t}},{key:"setUserInfo",value:function(t){this._id=t._id,this._name.textContent=t.name,this._about.textContent=t.about,this._avatar.src=t.avatar}}])&&M(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function G(t){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},G(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==G(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==G(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===G(o)?o:String(o)),r)}var o}var K=new(function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e.baseUrl,this.token=e.headers.authorization,this.contentType=e.headers["Content-Type"]}var e,n;return e=t,(n=[{key:"_fetch",value:function(t,e){return fetch(this.baseUrl+t,e).then((function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}))}},{key:"getInitialCards",value:function(){return this._fetch("/cards",{method:"GET",headers:{authorization:this.token}})}},{key:"getUserInfo",value:function(){return this._fetch("/users/me",{method:"GET",headers:{authorization:this.token}})}},{key:"updateUserInfo",value:function(t){var e=t.name,n=t.about;return this._fetch("/users/me",{method:"PATCH",headers:{authorization:this.token,"Content-Type":this.contentType},body:JSON.stringify({name:e,about:n})})}},{key:"updateAvatarUser",value:function(t){var e=t.avatar;return this._fetch("/users/me/avatar",{method:"PATCH",headers:{authorization:this.token,"Content-Type":this.contentType},body:JSON.stringify({avatar:e})})}},{key:"addNewCard",value:function(t){var e=t.name,n=t.link;return this._fetch("/cards",{method:"POST",headers:{authorization:this.token,"Content-Type":this.contentType},body:JSON.stringify({name:e,link:n})})}},{key:"deleteCard",value:function(t){return this._fetch("/cards/".concat(t),{method:"DELETE",headers:{authorization:this.token}})}},{key:"setLike",value:function(t){return this._fetch("/cards/".concat(t,"/likes"),{method:"PUT",headers:{authorization:this.token}})}},{key:"deleteLike",value:function(t){return this._fetch("/cards/".concat(t,"/likes"),{method:"DELETE",headers:{authorization:this.token}})}}])&&$(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66",headers:{authorization:"d3622e91-6a1b-4880-942f-1e681389a2d9","Content-Type":"application/json"}});function Q(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var W,X=new J(e),Y=new g(t,u);Y.enableValidation();var Z=new g(t,s);Z.enableValidation(),new g(t,c).enableValidation(),Promise.all([K.getUserInfo(),K.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,n)||function(t,e){if(t){if("string"==typeof t)return Q(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];X.setUserInfo(o),(W=new d({items:i,renderer:function(t){return function(t){var e=new b(t,"#card",X.getUserInfo(),(function(){return tt.open(t)}),(function(t,e){return ot.open(t,e)}),(function(t){return e.isLike()?K.deleteLike(t):K.setLike(t)}));return e.createCard()}(t)}},".elements-list")).renderItems()})).catch((function(t){return console.log("Ошибка: "+t)}));var tt=new I(f);tt.setEventListeners();var et=new U(l,(function(t){K.addNewCard(t).then((function(t){W.addItem(t),et.close()})).catch((function(t){return console.log(t)})).finally((function(){return et.btnSubmit.textContent="Cохранить"}))}));et.setEventListeners();var nt=new U(i,(function(t){K.updateUserInfo(t).then((function(t){X.setUserInfo(t),nt.close()})).catch((function(t){return console.log(t)})).finally((function(){return nt.btnSubmit.textContent="Cохранить"}))}));nt.setEventListeners();var rt=new U(a,(function(t){K.updateAvatarUser(t).then((function(t){X.setUserInfo(t),rt.close()})).catch((function(t){return console.log(t)})).finally((function(){return rt.btnSubmit.textContent="Cохранить"}))}));rt.setEventListeners();var ot=new N(p,(function(t){return K.deleteCard(t)}));ot.setEventListeners(),n.addEventListener("click",(function(){nt.setInputValues(X.getUserInfo()),Y.rebootForm(),nt.open()})),r.addEventListener("click",(function(){Z.rebootForm(),et.open()})),o.addEventListener("click",(function(){rt.setInputValues(X.getUserInfo()),Z.rebootForm(),rt.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,